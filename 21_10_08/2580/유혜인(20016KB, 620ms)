import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.StringTokenizer;

public class 백준_스도쿠 {
	static class Point {
		int x;
		int y;

		public Point(int x, int y) {
			this.x = x;
			this.y = y;
		}
	}

	static ArrayList<Point> blank;
	static int[][] map;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		map = new int[9][9];
		blank = new ArrayList<>();

		for (int i = 0; i < 9; i++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			for (int j = 0; j < 9; j++) {
				map[i][j] = Integer.parseInt(st.nextToken());
				if (map[i][j] == 0) {
					blank.add(new Point(i, j));
				}
			}
		}

		dfs(0);

	}

	private static void dfs( int idx) {
		if(blank.size() == idx) {
			for(int i=0;i<9;i++) {
				for(int j=0;j<9;j++) {
					System.out.print(map[i][j]+" ");
				}
				System.out.println();
			}
			
			System.exit(0);
		}
		
		Point cur = blank.get(idx);
		for(int i=1;i<=9;i++) {
			if(isPossible(cur.x, cur.y, i)) {
				map[cur.x][cur.y] = i;
				dfs(idx+1);
				map[cur.x][cur.y] = 0;
				
				
			}
		}
	}

	private static boolean isPossible(int x, int y, int num) {
		
		for(int i=0;i<9;i++) {
			if(map[i][y] == num)	return false;
			if(map[x][i] == num)	return false;
		}

		int xx = (x/3)*3;
		int yy = (y/3)*3;
		
		for(int i=0;i<3;i++) {
			for(int j=0;j<3;j++) {
				if(map[xx+i][yy+j] == num)	return false;
			}
		}

		return true;
	}

}
